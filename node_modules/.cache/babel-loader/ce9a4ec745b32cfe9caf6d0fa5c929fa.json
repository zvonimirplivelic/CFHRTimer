{"ast":null,"code":"var _jsxFileName = \"/home/zplivelic/AllOtherProjects/CrossfitHeartrateTimer/src/App.js\";\nimport React, { Component } from 'react';\nimport TimerForm from '../src/components/TimerForm';\nimport Timer from '../src/components/Timer';\nimport Button from '../src/components/Button';\nimport bell from '../public/assets/bell.mp3';\nimport './components/Styles.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      workTime: 25,\n      work: false\n    };\n    this.bell = new Audio(bell);\n\n    this.bellSound = () => {\n      this.bell.play();\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.convertWorkTime = () => {\n      let workTime = this.state.workTime;\n      return parseFloat(workTime * 60);\n    };\n\n    this.startTimer = () => {\n      let interval = null;\n      let timeInSec = this.convertWorkTime();\n      this.setState({\n        work: true,\n        workTime: timeInSec\n      });\n      interval = setInterval(() => {\n        this.setState({\n          workTime: timeInSec\n        });\n        timeInSec--;\n\n        if (timeInSec === 0) {\n          this.bellSound();\n          clearInterval(interval);\n          return this.setState({\n            work: false,\n            workTime: 25\n          });\n        }\n      }, 1000);\n    };\n  }\n\n  render() {\n    let timerScreen = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(TimerForm, {\n      handleChange: this.handleChange,\n      workTime: this.state.workTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Button, {\n      startTimer: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n\n    if (this.state.work) {\n      timerScreen = React.createElement(Timer, {\n        workTime: this.state.workTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        backgroundImage: \"url(\\\"./public/assets/cf_hrlogo_text.svg\\\")\",\n        backgroundRepeat: 'no-repeat'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, timerScreen);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zplivelic/AllOtherProjects/CrossfitHeartrateTimer/src/App.js"],"names":["React","Component","TimerForm","Timer","Button","bell","App","state","workTime","work","Audio","bellSound","play","handleChange","e","setState","target","name","value","convertWorkTime","parseFloat","startTimer","interval","timeInSec","setInterval","clearInterval","render","timerScreen","backgroundImage","backgroundRepeat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AAEA,OAAO,yBAAP;;AACA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE;AAFA,KADkB;AAAA,SAM1BJ,IAN0B,GAMnB,IAAIK,KAAJ,CAAUL,IAAV,CANmB;;AAAA,SAO1BM,SAP0B,GAOd,MAAM;AAChB,WAAKN,IAAL,CAAUO,IAAV;AAED,KAVyB;;AAAA,SAY1BC,YAZ0B,GAYVC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACD,KAdyB;;AAAA,SAgB1BC,eAhB0B,GAgBR,MAAM;AAAA,UACjBX,QADiB,GACL,KAAKD,KADA,CACjBC,QADiB;AAEtB,aAAOY,UAAU,CAACZ,QAAQ,GAAG,EAAZ,CAAjB;AACD,KAnByB;;AAAA,SAqB1Ba,UArB0B,GAqBb,MAAM;AACjB,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,SAAS,GAAG,KAAKJ,eAAL,EAAhB;AACA,WAAKJ,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAC,IAAN;AAAYD,QAAAA,QAAQ,EAAEe;AAAtB,OAAd;AACAD,MAAAA,QAAQ,GAAGE,WAAW,CAAC,MAAM;AACzB,aAAKT,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAEe;AAAZ,SAAd;AACAA,QAAAA,SAAS;;AACT,YAAGA,SAAS,KAAK,CAAjB,EAAoB;AAClB,eAAKZ,SAAL;AACAc,UAAAA,aAAa,CAACH,QAAD,CAAb;AACA,iBAAO,KAAKP,QAAL,CAAc;AAACN,YAAAA,IAAI,EAAE,KAAP;AAAcD,YAAAA,QAAQ,EAAE;AAAxB,WAAd,CAAP;AACD;AACF,OARmB,EAQjB,IARiB,CAAtB;AASD,KAlCyB;AAAA;;AAoC1BkB,EAAAA,MAAM,GAAI;AAER,QAAIC,WAAW,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACI,MAAA,YAAY,EAAI,KAAKd,YADzB;AAEI,MAAA,QAAQ,EAAI,KAAKN,KAAL,CAAWC,QAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAI,KAAKa,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADA;;AAUA,QAAG,KAAKd,KAAL,CAAWE,IAAd,EAAoB;AAClBkB,MAAAA,WAAW,GACX,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAI,KAAKpB,KAAL,CAAWC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAED;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,KAAK,EAAE;AAAEoB,QAAAA,eAAe,+CAAjB;AAAgEC,QAAAA,gBAAgB,EAAE;AAAlF,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,WADH,CADF;AAKD;;AA1DyB;;AA6D5B,eAAerB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport TimerForm from '../src/components/TimerForm'\nimport Timer from '../src/components/Timer'\nimport Button from '../src/components/Button'\n\nimport bell from '../public/assets/bell.mp3'\n\nimport './components/Styles.css'\nclass App extends Component {\n  state = {\n    workTime: 25,\n    work: false\n  }\n\n  bell = new Audio(bell)\n  bellSound = () => {\n    this.bell.play()\n\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  };\n\n  convertWorkTime = () => {\n    let {workTime} = this.state\n    return parseFloat(workTime * 60)\n  }\n\n  startTimer = () => {\n    let interval = null;\n    let timeInSec = this.convertWorkTime()\n    this.setState({work:true, workTime: timeInSec})\n    interval = setInterval(() => {\n        this.setState({ workTime: timeInSec })\n        timeInSec--\n        if(timeInSec === 0) {\n          this.bellSound()\n          clearInterval(interval)\n          return this.setState({work: false, workTime: 25})\n        }\n      }, 1000)\n  }\n\n  render () {\n\n    let timerScreen = \n    <div>\n      <div className=\"Form\">\n        <TimerForm\n            handleChange = {this.handleChange}\n            workTime = {this.state.workTime}/>\n        <Button startTimer = {this.startTimer}/>\n      </div>\n    </div>\n\n    if(this.state.work) {\n      timerScreen = \n      <Timer workTime = {this.state.workTime}/>\n    }\n    \n    return (\n      <div className=\"App\" style={{ backgroundImage: `url(\"./public/assets/cf_hrlogo_text.svg\")`, backgroundRepeat: 'no-repeat'}}>\n        {timerScreen}\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}